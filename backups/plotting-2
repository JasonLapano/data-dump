# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
from matplotlib import cm
import glob
from scipy.interpolate import interp1d
from scipy.misc import derivative
from scipy.interpolate import InterpolatedUnivariateSpline


 #%%
plt.close('all')
#put all filenames of scans here.  Filepath in 1st column, name in second as .xy file, 3rd as name for plotting.  filename should start with \\
filename = glob.glob('*.csv')#grabs all data in this folder with ****.dat



 #%%

thickness = 1#thickness in centimeters
geo = 4.53236 #thickness in centimeters Van der Pauw: pi/ln(2) =4.53236; Hall bar = lengh/Area


fig1, ax1 = plt.subplots()
i = 0;
for filename in filenames:
    
    name = filename[0] + filename[1]
    twotheta, intensity = np.loadtxt(name, delimiter=' ', unpack=True)
    intensity = (intensity + 2) *10**-i
    i = i + 2
    plt.plot(twotheta, intensity, label = 'XRD Scan', linewidth=0.5)
    plt.yscale('log')
    plt.xlabel('2Theta')
    plt.ylabel('Intensity')
    plt.ion()
   

plt.legend(filenames[:, 2], prop={'size':10})
ax1.xaxis.set_major_locator(ticker.MultipleLocator(5.))
ax1.xaxis.set_major_formatter(ticker.FormatStrFormatter('%d'))
ax1.xaxis.set_minor_locator(ticker.MultipleLocator(1))  
ax1.tick_params(direction='in', which='both', right=True, top=True, labelright=False, labeltop=False)
ax1.plot(label = '2theta' )

ax1.yaxis.set_major_locator(ticker.LogLocator(base=10.0, numticks=10))
#ax1.yaxis.set_major_formatter(FormatStrFormatter('%d'))
ax1.yaxis.set_minor_locator(ticker.LogLocator(base=10.0, numticks=10))  
#ax1.tick_params(direction='in', which='both', right=True, top=True, labelright=False, labeltop=False)
plt.xlim(5, 80)
plt.show()



a = 12.994
l = 2 * a * np.sin(twotheta*np.pi/180/2) / (1.5401)
fnl = np.zeros((l.size, 5))

fnl[:, 2] = l
fnl[:, 3] = intensity

plt.savefig(filenames[0][0]+'.png')
plt.savefig(filenames[0][0]+'.svg')
